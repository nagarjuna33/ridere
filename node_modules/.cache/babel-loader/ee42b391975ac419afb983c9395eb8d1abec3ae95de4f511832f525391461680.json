{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahes\\\\Downloads\\\\Processing-main\\\\Processing-main\\\\src\\\\NumberCounterCode.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberCounter = ({\n  start,\n  end,\n  duration\n}) => {\n  _s();\n  const [count, setCount] = useState(start);\n  useEffect(() => {\n    let startTime;\n    let rafId;\n    const step = timestamp => {\n      if (!startTime) startTime = timestamp;\n      const progress = timestamp - startTime;\n      setCount(Math.min(Math.floor(progress / duration * (end - start) + start), end));\n      if (progress < duration) {\n        rafId = requestAnimationFrame(step);\n      }\n    };\n    rafId = requestAnimationFrame(step);\n    return () => cancelAnimationFrame(rafId);\n  }, [start, end, duration]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_s(NumberCounter, \"Q4cK/HCeE2OCCRH7/AsRja//yGk=\");\n_c = NumberCounter;\nexport default NumberCounter;\n\n// in app.js\n//  <div>\n//     <h1>Number Counting Animation</h1>\n//     <NumberCounter start={0} end={100} duration={3000} />\n//   </div> \nvar _c;\n$RefreshReg$(_c, \"NumberCounter\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","NumberCounter","start","end","duration","_s","count","setCount","startTime","rafId","step","timestamp","progress","Math","min","floor","requestAnimationFrame","cancelAnimationFrame","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mahes/Downloads/Processing-main/Processing-main/src/NumberCounterCode.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst NumberCounter = ({ start, end, duration }) => {\n  const [count, setCount] = useState(start);\n\n  useEffect(() => {\n    let startTime;\n    let rafId;\n\n    const step = (timestamp) => {\n      if (!startTime) startTime = timestamp;\n      const progress = timestamp - startTime;\n\n      setCount(Math.min(Math.floor((progress / duration) * (end - start) + start), end));\n\n      if (progress < duration) {\n        rafId = requestAnimationFrame(step);\n      }\n    };\n\n    rafId = requestAnimationFrame(step);\n\n    return () => cancelAnimationFrame(rafId);\n  }, [start, end, duration]);\n\n  return <span>{count}</span>;\n};\n\nexport default NumberCounter;\n\n\n  // in app.js\n  //  <div>\n  //     <h1>Number Counting Animation</h1>\n  //     <NumberCounter start={0} end={100} duration={3000} />\n  //   </div> "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,KAAK;EAAEC,GAAG;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACI,KAAK,CAAC;EAEzCL,SAAS,CAAC,MAAM;IACd,IAAIW,SAAS;IACb,IAAIC,KAAK;IAET,MAAMC,IAAI,GAAIC,SAAS,IAAK;MAC1B,IAAI,CAACH,SAAS,EAAEA,SAAS,GAAGG,SAAS;MACrC,MAAMC,QAAQ,GAAGD,SAAS,GAAGH,SAAS;MAEtCD,QAAQ,CAACM,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAAEH,QAAQ,GAAGR,QAAQ,IAAKD,GAAG,GAAGD,KAAK,CAAC,GAAGA,KAAK,CAAC,EAAEC,GAAG,CAAC,CAAC;MAElF,IAAIS,QAAQ,GAAGR,QAAQ,EAAE;QACvBK,KAAK,GAAGO,qBAAqB,CAACN,IAAI,CAAC;MACrC;IACF,CAAC;IAEDD,KAAK,GAAGO,qBAAqB,CAACN,IAAI,CAAC;IAEnC,OAAO,MAAMO,oBAAoB,CAACR,KAAK,CAAC;EAC1C,CAAC,EAAE,CAACP,KAAK,EAAEC,GAAG,EAAEC,QAAQ,CAAC,CAAC;EAE1B,oBAAOJ,OAAA;IAAAkB,QAAA,EAAOZ;EAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAC7B,CAAC;AAACjB,EAAA,CAxBIJ,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AA0BnB,eAAeA,aAAa;;AAG1B;AACA;AACA;AACA;AACA;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}